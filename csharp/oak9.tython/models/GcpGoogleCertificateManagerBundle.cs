// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gcp/gcp_google_certificate_manager_bundle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Oak9.Tython.Gcp.GoogleCertificateManagerBundle {

  /// <summary>Holder for reflection information generated from gcp/gcp_google_certificate_manager_bundle.proto</summary>
  public static partial class GcpGoogleCertificateManagerBundleReflection {

    #region Descriptor
    /// <summary>File descriptor for gcp/gcp_google_certificate_manager_bundle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GcpGoogleCertificateManagerBundleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nY3AvZ2NwX2dvb2dsZV9jZXJ0aWZpY2F0ZV9tYW5hZ2VyX2J1bmRsZS5w",
            "cm90bxIxb2FrOS50eXRob24uZ2NwLmdvb2dsZV9jZXJ0aWZpY2F0ZV9tYW5h",
            "Z2VyX2J1bmRsZRoTc2hhcmVkL3NoYXJlZC5wcm90bxoZZ2NwL2djcF9jZXJ0",
            "aWZpY2F0ZS5wcm90byLSAwoYR29vZ2xlQ2VydGlmaWNhdGVNYW5hZ2VyEmMK",
            "H2NlcnRpZmljYXRlX21hbmFnZXJfY2VydGlmaWNhdGUYASADKAsyOi5vYWs5",
            "LnR5dGhvbi5nY3AuY2VydGlmaWNhdGUuQ2VydGlmaWNhdGVNYW5hZ2VyQ2Vy",
            "dGlmaWNhdGUSagojY2VydGlmaWNhdGVfbWFuYWdlcl9jZXJ0aWZpY2F0ZV9t",
            "YXAYAiABKAsyPS5vYWs5LnR5dGhvbi5nY3AuY2VydGlmaWNhdGUuQ2VydGlm",
            "aWNhdGVNYW5hZ2VyQ2VydGlmaWNhdGVNYXASdQopY2VydGlmaWNhdGVfbWFu",
            "YWdlcl9jZXJ0aWZpY2F0ZV9tYXBfZW50cnkYAyADKAsyQi5vYWs5LnR5dGhv",
            "bi5nY3AuY2VydGlmaWNhdGUuQ2VydGlmaWNhdGVNYW5hZ2VyQ2VydGlmaWNh",
            "dGVNYXBFbnRyeRJuCiVjZXJ0aWZpY2F0ZV9tYW5hZ2VyX2Ruc19hdXRob3Jp",
            "emF0aW9uGAQgAygLMj8ub2FrOS50eXRob24uZ2NwLmNlcnRpZmljYXRlLkNl",
            "cnRpZmljYXRlTWFuYWdlckRuc0F1dGhvcml6YXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Oak9.Tython.Shared.SharedReflection.Descriptor, global::Oak9.Tython.Gcp.Certificate.GcpCertificateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Oak9.Tython.Gcp.GoogleCertificateManagerBundle.GoogleCertificateManager), global::Oak9.Tython.Gcp.GoogleCertificateManagerBundle.GoogleCertificateManager.Parser, new[]{ "CertificateManagerCertificate", "CertificateManagerCertificateMap", "CertificateManagerCertificateMapEntry", "CertificateManagerDnsAuthorization" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GoogleCertificateManager : pb::IMessage<GoogleCertificateManager>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GoogleCertificateManager> _parser = new pb::MessageParser<GoogleCertificateManager>(() => new GoogleCertificateManager());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GoogleCertificateManager> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Oak9.Tython.Gcp.GoogleCertificateManagerBundle.GcpGoogleCertificateManagerBundleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GoogleCertificateManager() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GoogleCertificateManager(GoogleCertificateManager other) : this() {
      certificateManagerCertificate_ = other.certificateManagerCertificate_.Clone();
      certificateManagerCertificateMap_ = other.certificateManagerCertificateMap_ != null ? other.certificateManagerCertificateMap_.Clone() : null;
      certificateManagerCertificateMapEntry_ = other.certificateManagerCertificateMapEntry_.Clone();
      certificateManagerDnsAuthorization_ = other.certificateManagerDnsAuthorization_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GoogleCertificateManager Clone() {
      return new GoogleCertificateManager(this);
    }

    /// <summary>Field number for the "certificate_manager_certificate" field.</summary>
    public const int CertificateManagerCertificateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificate> _repeated_certificateManagerCertificate_codec
        = pb::FieldCodec.ForMessage(10, global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificate.Parser);
    private readonly pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificate> certificateManagerCertificate_ = new pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificate> CertificateManagerCertificate {
      get { return certificateManagerCertificate_; }
    }

    /// <summary>Field number for the "certificate_manager_certificate_map" field.</summary>
    public const int CertificateManagerCertificateMapFieldNumber = 2;
    private global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMap certificateManagerCertificateMap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMap CertificateManagerCertificateMap {
      get { return certificateManagerCertificateMap_; }
      set {
        certificateManagerCertificateMap_ = value;
      }
    }

    /// <summary>Field number for the "certificate_manager_certificate_map_entry" field.</summary>
    public const int CertificateManagerCertificateMapEntryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMapEntry> _repeated_certificateManagerCertificateMapEntry_codec
        = pb::FieldCodec.ForMessage(26, global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMapEntry.Parser);
    private readonly pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMapEntry> certificateManagerCertificateMapEntry_ = new pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMapEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMapEntry> CertificateManagerCertificateMapEntry {
      get { return certificateManagerCertificateMapEntry_; }
    }

    /// <summary>Field number for the "certificate_manager_dns_authorization" field.</summary>
    public const int CertificateManagerDnsAuthorizationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Oak9.Tython.Gcp.Certificate.CertificateManagerDnsAuthorization> _repeated_certificateManagerDnsAuthorization_codec
        = pb::FieldCodec.ForMessage(34, global::Oak9.Tython.Gcp.Certificate.CertificateManagerDnsAuthorization.Parser);
    private readonly pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerDnsAuthorization> certificateManagerDnsAuthorization_ = new pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerDnsAuthorization>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Oak9.Tython.Gcp.Certificate.CertificateManagerDnsAuthorization> CertificateManagerDnsAuthorization {
      get { return certificateManagerDnsAuthorization_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GoogleCertificateManager);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GoogleCertificateManager other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateManagerCertificate_.Equals(other.certificateManagerCertificate_)) return false;
      if (!object.Equals(CertificateManagerCertificateMap, other.CertificateManagerCertificateMap)) return false;
      if(!certificateManagerCertificateMapEntry_.Equals(other.certificateManagerCertificateMapEntry_)) return false;
      if(!certificateManagerDnsAuthorization_.Equals(other.certificateManagerDnsAuthorization_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateManagerCertificate_.GetHashCode();
      if (certificateManagerCertificateMap_ != null) hash ^= CertificateManagerCertificateMap.GetHashCode();
      hash ^= certificateManagerCertificateMapEntry_.GetHashCode();
      hash ^= certificateManagerDnsAuthorization_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      certificateManagerCertificate_.WriteTo(output, _repeated_certificateManagerCertificate_codec);
      if (certificateManagerCertificateMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CertificateManagerCertificateMap);
      }
      certificateManagerCertificateMapEntry_.WriteTo(output, _repeated_certificateManagerCertificateMapEntry_codec);
      certificateManagerDnsAuthorization_.WriteTo(output, _repeated_certificateManagerDnsAuthorization_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      certificateManagerCertificate_.WriteTo(ref output, _repeated_certificateManagerCertificate_codec);
      if (certificateManagerCertificateMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CertificateManagerCertificateMap);
      }
      certificateManagerCertificateMapEntry_.WriteTo(ref output, _repeated_certificateManagerCertificateMapEntry_codec);
      certificateManagerDnsAuthorization_.WriteTo(ref output, _repeated_certificateManagerDnsAuthorization_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += certificateManagerCertificate_.CalculateSize(_repeated_certificateManagerCertificate_codec);
      if (certificateManagerCertificateMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateManagerCertificateMap);
      }
      size += certificateManagerCertificateMapEntry_.CalculateSize(_repeated_certificateManagerCertificateMapEntry_codec);
      size += certificateManagerDnsAuthorization_.CalculateSize(_repeated_certificateManagerDnsAuthorization_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GoogleCertificateManager other) {
      if (other == null) {
        return;
      }
      certificateManagerCertificate_.Add(other.certificateManagerCertificate_);
      if (other.certificateManagerCertificateMap_ != null) {
        if (certificateManagerCertificateMap_ == null) {
          CertificateManagerCertificateMap = new global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMap();
        }
        CertificateManagerCertificateMap.MergeFrom(other.CertificateManagerCertificateMap);
      }
      certificateManagerCertificateMapEntry_.Add(other.certificateManagerCertificateMapEntry_);
      certificateManagerDnsAuthorization_.Add(other.certificateManagerDnsAuthorization_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateManagerCertificate_.AddEntriesFrom(input, _repeated_certificateManagerCertificate_codec);
            break;
          }
          case 18: {
            if (certificateManagerCertificateMap_ == null) {
              CertificateManagerCertificateMap = new global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMap();
            }
            input.ReadMessage(CertificateManagerCertificateMap);
            break;
          }
          case 26: {
            certificateManagerCertificateMapEntry_.AddEntriesFrom(input, _repeated_certificateManagerCertificateMapEntry_codec);
            break;
          }
          case 34: {
            certificateManagerDnsAuthorization_.AddEntriesFrom(input, _repeated_certificateManagerDnsAuthorization_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            certificateManagerCertificate_.AddEntriesFrom(ref input, _repeated_certificateManagerCertificate_codec);
            break;
          }
          case 18: {
            if (certificateManagerCertificateMap_ == null) {
              CertificateManagerCertificateMap = new global::Oak9.Tython.Gcp.Certificate.CertificateManagerCertificateMap();
            }
            input.ReadMessage(CertificateManagerCertificateMap);
            break;
          }
          case 26: {
            certificateManagerCertificateMapEntry_.AddEntriesFrom(ref input, _repeated_certificateManagerCertificateMapEntry_codec);
            break;
          }
          case 34: {
            certificateManagerDnsAuthorization_.AddEntriesFrom(ref input, _repeated_certificateManagerDnsAuthorization_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
