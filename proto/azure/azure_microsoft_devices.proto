syntax = "proto3";

package oak9.tython.azure.microsoft_devices;

import "shared/shared.proto";

message Microsoft_Devices {
	IotHubs iot_hubs = 1;
	repeated IotHubsCertificates iot_hubs_certificates = 2;
	repeated IotHubsPrivateEndpointConnections iot_hubs_private_endpoint_connections = 3;
}

message IotHubsPrivateEndpointConnections {
	oak9.tython.shared.ResourceInfo resource_info = 1;
	string name = 2;
	PrivateEndpoint private_endpoint = 3;
	PrivateLinkServiceConnectionState private_link_service_connection_state = 4;
}

message IotHubsEventHubEndpointsConsumerGroups {
	oak9.tython.shared.ResourceInfo resource_info = 1;
	string name = 2;
}

message IotHubsCertificates {
	oak9.tython.shared.ResourceInfo resource_info = 1;
	string name = 2;
	string certificate = 3;
	bool is_verified = 4;
}

message IotHubs {
	oak9.tython.shared.ResourceInfo resource_info = 1;
	string etag = 2;
	ArmIdentity identity = 3;
	string location = 4;
	string name = 5;
	repeated string allowed_fqdn_list = 6;
	repeated SharedAccessSignatureAuthorizationRule authorization_policies = 7;
	CloudToDeviceProperties cloud_to_device = 8;
	string comments = 9;
	bool disable_device_s_a_s = 10;
	bool disable_local_auth = 11;
	bool disable_module_s_a_s = 12;
	bool enable_data_residency = 13;
	bool enable_file_upload_notifications = 14;
	map<string, string> event_hub_endpoints = 15;
	string features = 16;
	repeated IpFilterRule ip_filter_rules = 17;
	map<string, string> messaging_endpoints = 18;
	string min_tls_version = 19;
	NetworkRuleSetProperties network_rule_sets = 20;
	repeated PrivateEndpointConnection private_endpoint_connections = 21;
	string public_network_access = 22;
	bool restrict_outbound_network_access = 23;
	RoutingProperties routing = 24;
	map<string, string> storage_endpoints = 25;
	IotHubSkuInfo sku = 26;
	map<string, string> tags = 27;
}

message IotHubSkuInfo {
	int32 capacity = 1;
	string name = 2;
}

message RoutingProperties {
	RoutingEndpoints endpoints = 1;
	repeated EnrichmentProperties enrichments = 2;
	FallbackRouteProperties fallback_route = 3;
	repeated RouteProperties routes = 4;
}

message RouteProperties {
	string condition = 1;
	repeated string endpoint_names = 2;
	bool is_enabled = 3;
	string name = 4;
	string source = 5;
}

message FallbackRouteProperties {
	string condition = 1;
	repeated string endpoint_names = 2;
	bool is_enabled = 3;
	string name = 4;
	string source = 5;
}

message EnrichmentProperties {
	repeated string endpoint_names = 1;
	string key = 2;
	string value = 3;
}

message RoutingEndpoints {
	repeated RoutingEventHubProperties event_hubs = 1;
	repeated RoutingServiceBusQueueEndpointProperties service_bus_queues = 2;
	repeated RoutingServiceBusTopicEndpointProperties service_bus_topics = 3;
	repeated RoutingStorageContainerProperties storage_containers = 4;
}

message RoutingStorageContainerProperties {
	string authentication_type = 1;
	int32 batch_frequency_in_seconds = 2;
	string connection_string = 3;
	string container_name = 4;
	string encoding = 5;
	string endpoint_uri = 6;
	string file_name_format = 7;
	string id = 8;
	ManagedIdentity identity = 9;
	int32 max_chunk_size_in_bytes = 10;
	string name = 11;
	string resource_group = 12;
	string subscription_id = 13;
}

message RoutingServiceBusTopicEndpointProperties {
	string authentication_type = 1;
	string connection_string = 2;
	string endpoint_uri = 3;
	string entity_path = 4;
	string id = 5;
	ManagedIdentity identity = 6;
	string name = 7;
	string resource_group = 8;
	string subscription_id = 9;
}

message RoutingServiceBusQueueEndpointProperties {
	string authentication_type = 1;
	string connection_string = 2;
	string endpoint_uri = 3;
	string entity_path = 4;
	string id = 5;
	ManagedIdentity identity = 6;
	string name = 7;
	string resource_group = 8;
	string subscription_id = 9;
}

message RoutingEventHubProperties {
	string authentication_type = 1;
	string connection_string = 2;
	string endpoint_uri = 3;
	string entity_path = 4;
	string id = 5;
	ManagedIdentity identity = 6;
	string name = 7;
	string resource_group = 8;
	string subscription_id = 9;
}

message ManagedIdentity {
	string user_assigned_identity = 1;
}

message PrivateEndpointConnection {
	PrivateEndpoint private_endpoint = 1;
	PrivateLinkServiceConnectionState private_link_service_connection_state = 2;
}

message PrivateLinkServiceConnectionState {
	string actions_required = 1;
	string description = 2;
	string status = 3;
}

message PrivateEndpoint {
	string name = 1;
}

message NetworkRuleSetProperties {
	bool apply_to_built_in_event_hub_endpoint = 1;
	string default_action = 2;
	repeated NetworkRuleSetIpRule ip_rules = 3;
}

message NetworkRuleSetIpRule {
	string action = 1;
	string filter_name = 2;
	string ip_mask = 3;
}

message IpFilterRule {
	string action = 1;
	string filter_name = 2;
	string ip_mask = 3;
}

message CloudToDeviceProperties {
	string default_ttl_as_iso8601 = 1;
	FeedbackProperties feedback = 2;
	int32 max_delivery_count = 3;
}

message FeedbackProperties {
	string lock_duration_as_iso8601 = 1;
	int32 max_delivery_count = 2;
	string ttl_as_iso8601 = 3;
}

message SharedAccessSignatureAuthorizationRule {
	string key_name = 1;
	string primary_key = 2;
	string rights = 3;
	string secondary_key = 4;
}

message ArmIdentity {
	string type = 1;
	map<string, string> user_assigned_identities = 2;
}

